pipeline {
    agent any

    environment {
        IMAGE_NAME = "your-image-name"
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Git checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Harshil00077/Object_Counting.git']])
            }
        }
        
        stage('Start Kafka') {
            steps {
                script {
                    sh 'docker network create kafka-network || true'
                    sh 'docker-compose -f kafka/docker-compose.yml up -d'
                }
            }
        }

        stage('Check for changes in model folder') {
            steps {
                script {
                    def changedFiles = sh(script: "git diff --name-only HEAD~1 HEAD", returnStdout: true).trim()
                    def modelChanged = changedFiles.split('\n').any { it.startsWith('src/Object_Counting') }
                    env.MODEL_CHANGED = modelChanged ? 'true' : 'false'
                }
            }
        }
        
        stage('Run Docker Compose') {
            steps {
                script {
                    if (env.MODEL_CHANGED == 'true') {
                        sh 'echo "Model has changed"'
                        sh 'docker-compose -f docker-compose.yml build --no-cache'
                    } else {
                        sh 'echo "we dont need to run dvc"'
                        sh 'docker-compose -f docker-compose_1.yml build --no-cache'
                    }
                }
            }
        }
        
    }
}
